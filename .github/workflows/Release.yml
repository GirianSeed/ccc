name: Release

on:
  release:
    types: [created]

env:
  BUILD_TYPE: Release
  BUILD_STATIC: false

jobs:
  build:
    runs-on: ${{ matrix.sys.os }} 
    strategy:
      matrix:
        sys: 
          - { os: windows-latest, shell: pwsh }
          #- { os: ubuntu-latest,  shell: 'alpine.sh --root {0}'  }
          #- { os: macos-latest,   shell: bash  }
    defaults:
      run:
        shell: ${{ matrix.sys.shell }}

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: 'recursive'
    
    - name: Setup latest Alpine Linux
      uses: jirutka/setup-alpine@39d2d96fa8e4b713be89c0239a5c3b9a0f49838d
      if: ${{ matrix.sys.os == 'ubuntu-latest' }}
      env: 
        BUILD_STATIC: true
      with:
        arch: x86_64
        packages: >
          make
          cmake
          libstdc++
          g++
          musl-dev
      
    - name: Configure Linux CMake
      run: cmake -B ${{github.workspace}}/build -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DBUILD_STATIC=${{env.BUILD_STATIC}}

    - name: Build
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      run: ctest -C ${{env.BUILD_TYPE}} --output-on-failure

    - name: Windows Zip App
      working-directory: build/Release
      if: ${{ matrix.sys.os == 'windows-latest' }}
      run: |
        Compress-Archive * ccc_${{ RUNNER_OS }}_v${{ github.ref_name }}.zip

    - name: Update release asset
      id: upload-release-asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ github.event.release.upload_url }}
        asset_path: build/Release
        asset_name: ccc_${{ RUNNER_OS }}_v${{ github.ref_name }}.zip
        asset_content_type: application/zip
