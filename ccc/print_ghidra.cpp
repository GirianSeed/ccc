#include "print_ghidra.h"

namespace ccc {

// print_ghidra_prologue
// print_ghidra_types
// print_ghidra_epilogue
void print_ghidra_prologue(FILE* dest, const fs::path& input_file) {
	fprintf(dest, "// Generated by stdump from %s\n", input_file.filename().string().c_str());
	fprintf(dest, "//@author stdump\n");
	fprintf(dest, "//@category stdump\n");
	fprintf(dest, "\n");
	fprintf(dest, "import ghidra.app.script.GhidraScript;\n");
	fprintf(dest, "import ghidra.program.model.mem.*;\n");
	fprintf(dest, "import ghidra.program.model.lang.*;\n");
	fprintf(dest, "import ghidra.program.model.pcode.*;\n");
	fprintf(dest, "import ghidra.program.model.util.*;\n");
	fprintf(dest, "import ghidra.program.model.reloc.*;\n");
	fprintf(dest, "import ghidra.program.model.data.*;\n");
	fprintf(dest, "import ghidra.program.model.block.*;\n");
	fprintf(dest, "import ghidra.program.model.symbol.*;\n");
	fprintf(dest, "import ghidra.program.model.scalar.*;\n");
	fprintf(dest, "import ghidra.program.model.listing.*;\n");
	fprintf(dest, "import ghidra.program.model.address.*;\n");
	fprintf(dest, "\n");
	fprintf(dest, "public class GeneratedSymbolImporter extends GhidraScript {\n");
	fprintf(dest, "	public void run() throws Exception {\n");
}

void print_ghidra_types(FILE* dest, const std::vector<ast::Node>& ast_nodes) {
	// ???
}

void print_ghidra_epilogue(FILE* dest) {
	fprintf(dest, "	}\n");
	fprintf(dest, "}\n");
}

}
